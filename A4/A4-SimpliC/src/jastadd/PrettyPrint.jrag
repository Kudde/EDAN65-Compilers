import java.io.PrintStream;

aspect PrettyPrint {
	public void ASTNode.prettyPrint(PrintStream out) {
		prettyPrint(out, "");
		out.println();
	}

	public void ASTNode.prettyPrint(PrintStream out, String ind) {
		for (int i = 0; i < getNumChild(); ++i) {
			getChild(i).prettyPrint(out, ind);
		}
	}


	public void Fun.prettyPrint(PrintStream out, String ind) {
		getType().prettyPrint(out, ind);
		out.print(" ");
		getIdDecl().prettyPrint(out, ind);
		getParam().prettyPrint(out, ind);
		getBlock().prettyPrint(out, ind + "\t");
		out.print(ind + "}\n\n");
	}

	public void Param.prettyPrint(PrintStream out, String ind) {
		out.print("(");
		for(int i = 0; i < getNumParamDecl(); i++) {
			getParamDecl(i).prettyPrint(out, ind);
				if(i != getNumParamDecl() - 1)
					out.print(", ");
		}
		out.print(")");
	}

	public void ParamDecl.prettyPrint(PrintStream out, String ind) {
		getType().prettyPrint(out, ind);
		out.print(" ");
		getIdDecl().prettyPrint(out, ind);
	}


	public void Block.prettyPrint(PrintStream out, String ind) {
		out.print(" {\n");
		for (int i = 0; i < getNumStmt(); i++) {
			getStmt(i).prettyPrint(out, ind);
		}
	}

	public void AssignStmt.prettyPrint(PrintStream out, String ind) {
		out.print(ind);
		getIdUse().prettyPrint(out, ind);
		out.print(" = ");
		getExpr().prettyPrint(out, ind);
		out.print(";\n");
	}
	public void DeclStmt.prettyPrint(PrintStream out, String ind) {
		getType().prettyPrint(out, ind);
		out.print(" ");
		getIdDecl().prettyPrint(out, ind);
		if(hasExpr()) {
			out.print(" = ");
			getExpr().prettyPrint(out, ind);
		}
		out.print(";\n");
	}

		public void WhileStmt.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "while (");
		getExpr().prettyPrint(out, ind);
		out.print(")");
		getBlock().prettyPrint(out, ind+"\t");
		out.print(ind + "}\n");
	}

	public void IfStmt.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "if (");
		getExpr().prettyPrint(out, ind);
		out.print(")");
		getIf().prettyPrint(out, ind + "\t");
		out.print(ind + "}\n");
		if (hasElse()) {
			out.print(ind + "else");
			getElse().prettyPrint(out, ind + "\t");
			out.print(ind + "}\n");
		}
	}
	public void ReturnStmt.prettyPrint(PrintStream out, String ind) {
		out.print(ind + "return ");
		getExpr().prettyPrint(out, "");
		out.print(";\n");
	}
	public void ExprStmt.prettyPrint(PrintStream out, String ind) {
		getExpr().prettyPrint(out, ind);
		out.print(";\n");
	}

	public void Mul.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" * ");
		getRight().prettyPrint(out, ind);
	}

	public void Div.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" / ");
		getRight().prettyPrint(out, ind);
	}
	public void Plus.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" + ");
		getRight().prettyPrint(out, ind);
	}
	public void Sub.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" - ");
		getRight().prettyPrint(out, ind);
	}
	public void Mod.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" % ");
		getRight().prettyPrint(out, ind);
	}

	public void Equal.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" == ");
		getRight().prettyPrint(out, ind);
	}
	public void NotEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" != ");
		getRight().prettyPrint(out, ind);
	}
	public void Less.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" < ");
		getRight().prettyPrint(out, ind);
	}
	public void Greater.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" > ");
		getRight().prettyPrint(out, ind);
	}
	public void LessEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" <= ");
		getRight().prettyPrint(out, ind);
	}
	public void GreaterEqual.prettyPrint(PrintStream out, String ind) {
		getLeft().prettyPrint(out, ind);
		out.print(" >= ");
		getRight().prettyPrint(out, ind);
	}

	public void Literal.prettyPrint(PrintStream out, String ind) {
		out.print(getNUMERAL());
	}

	public void IdUse.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}

	public void IdDecl.prettyPrint(PrintStream out, String ind) {
		out.print(getID());
	}
	public void IntType.prettyPrint(PrintStream out, String ind) {
		out.print(ind + getID());
	}

	public void FunCall.prettyPrint(PrintStream out, String ind) {
		out.print(ind + getIdUse().getID());
		out.print("(");
		for(int i = 0; i < getNumExpr(); i++) {
			getExpr(i).prettyPrint(out, ind);
			if(i != getNumExpr() - 1)
				out.print(", ");
		}
		out.print(")");
	}

}
