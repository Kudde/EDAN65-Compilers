aspect MinValue {
	// Exercise 1
	syn int Node.localMin() = 0;
	eq Leaf.localMin() = getNumber();
	eq Pair.localMin() {
		if (getLeft().localMin() < getRight().localMin())
			return getLeft().localMin();
		else
			return getRight().localMin();

	}


	// Exercise 2
	inh int Node.globalMin();
	eq Program.getNode().globalMin() = getNode().localMin();

	// Exercise 3
	syn boolean Leaf.isMinValue() = (getNumber() == globalMin());

	// Exercise 4
	syn int Program.nbrOfMinValues() = getNode().nbrOfMinValues();
	syn int Node.nbrOfMinValues();
	eq Leaf.nbrOfMinValues() {
		if (globalMin() == getNumber())
			return 1;
		else
			return 0;
	}
  	eq Pair.nbrOfMinValues() {
    		return getLeft().nbrOfMinValues() + getRight().nbrOfMinValues();
  	}

}
