<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="lang.TestDumpTree" tests="13" skipped="0" failures="11" errors="0" timestamp="2018-09-28T08:00:53" hostname="beta-7" time="0.152">
  <properties/>
  <testcase name="runTest[decltest.in]" classname="lang.TestDumpTree" time="0.036">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;a&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;            Literal NUMERAL=&quot;5&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;y&quot;&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;]&#10;              Liter...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;a&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;x&quot;&#10;            Literal NUMERAL=&quot;5&quot;&#10;          AssignStmt&#10;            ID ID=&quot;y&quot;&#10;            ID ID=&quot;x&quot;&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt]&#10;              Liter...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;a&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;5&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            ID ID=&quot;x&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt]
              Liter...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;a&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;5&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            ID ID=&quot;x&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt]
              Liter...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[allexprtest.in]" classname="lang.TestDumpTree" time="0.025">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;expr&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;ans&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;            Literal NUMERAL=&quot;2&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;y&quot;&#13;&#10;            Literal NUMERAL=&quot;3&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Literal NUMERAL=&quot;5&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;ans&quot;&#13;&#10;            Mod&#13;&#10;              Sub&#13;&#10;                Plus&#13;&#10;                  ID ID=&quot;x&quot;&#13;&#10;                  Mul&#13;&#10;                    Plus&#13;&#10;                      Literal NUMERAL=&quot;2&quot;&#13;&#10;                      Literal NUMERAL=&quot;3&quot;&#13;&#10;                    Literal NUMERAL=&quot;2&quot;&#13;&#10;                Div&#13;&#10;                  Literal NUMERAL=&quot;4&quot;&#13;&#10;                  Literal NUMERAL=&quot;2&quot;&#13;]&#10;              Liter...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;expr&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;ans&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;x&quot;&#10;            Literal NUMERAL=&quot;2&quot;&#10;          AssignStmt&#10;            ID ID=&quot;y&quot;&#10;            Literal NUMERAL=&quot;3&quot;&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Literal NUMERAL=&quot;5&quot;&#10;          AssignStmt&#10;            ID ID=&quot;ans&quot;&#10;            Mod&#10;              Sub&#10;                Plus&#10;                  ID ID=&quot;x&quot;&#10;                  Mul&#10;                    Plus&#10;                      Literal NUMERAL=&quot;2&quot;&#10;                      Literal NUMERAL=&quot;3&quot;&#10;                    Literal NUMERAL=&quot;2&quot;&#10;                Div&#10;                  Literal NUMERAL=&quot;4&quot;&#10;                  Literal NUMERAL=&quot;2&quot;]&#10;              Liter...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;expr&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;ans&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Literal NUMERAL=&quot;5&quot;
          AssignStmt
            ID ID=&quot;ans&quot;
            Mod
              Sub
                Plus
                  ID ID=&quot;x&quot;
                  Mul
                    Plus
                      Literal NUMERAL=&quot;2&quot;
                      Literal NUMERAL=&quot;3&quot;
                    Literal NUMERAL=&quot;2&quot;
                Div
                  Literal NUMERAL=&quot;4&quot;
                  Literal NUMERAL=&quot;2&quot;]
              Liter...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;expr&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;ans&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Literal NUMERAL=&quot;5&quot;
          AssignStmt
            ID ID=&quot;ans&quot;
            Mod
              Sub
                Plus
                  ID ID=&quot;x&quot;
                  Mul
                    Plus
                      Literal NUMERAL=&quot;2&quot;
                      Literal NUMERAL=&quot;3&quot;
                    Literal NUMERAL=&quot;2&quot;
                Div
                  Literal NUMERAL=&quot;4&quot;
                  Literal NUMERAL=&quot;2&quot;]
              Liter...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[randomtest.in]" classname="lang.TestDumpTree" time="0.017">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;...           ID ID=&quot;a&quot;[]&gt; but was:&lt;...           ID ID=&quot;a&quot;[&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;gcd2&quot;&#10;      Param&#10;        List&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;a&quot;&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;b&quot;&#10;      Block&#10;        List&#10;          IfStmt&#10;            Equal&#10;              ID ID=&quot;b&quot;&#10;              Literal NUMERAL=&quot;0&quot;&#10;            Block&#10;              List&#10;                ReturnStmt&#10;                  ID ID=&quot;a&quot;&#10;            Opt&#10;          ReturnStmt&#10;            FunCall ID=&quot;gcd2&quot;&#10;              List&#10;                ID ID=&quot;b&quot;&#10;                Mod&#10;                  ID ID=&quot;a&quot;&#10;                  ID ID=&quot;b&quot;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;...           ID ID=&quot;a&quot;[]&gt; but was:&lt;...           ID ID=&quot;a&quot;[
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;gcd2&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;b&quot;
      Block
        List
          IfStmt
            Equal
              ID ID=&quot;b&quot;
              Literal NUMERAL=&quot;0&quot;
            Block
              List
                ReturnStmt
                  ID ID=&quot;a&quot;
            Opt
          ReturnStmt
            FunCall ID=&quot;gcd2&quot;
              List
                ID ID=&quot;b&quot;
                Mod
                  ID ID=&quot;a&quot;
                  ID ID=&quot;b&quot;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[gcd.in]" classname="lang.TestDumpTree" time="0.011">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;[]&gt; but was:&lt;[Program&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;gcd1&quot;&#10;      Param&#10;        List&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;a&quot;&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;b&quot;&#10;      Block&#10;        List&#10;          WhileStmt&#10;            NotEqual&#10;              ID ID=&quot;a&quot;&#10;              ID ID=&quot;b&quot;&#10;            Block&#10;              List&#10;                IfStmt&#10;                  Greater&#10;                    ID ID=&quot;a&quot;&#10;                    ID ID=&quot;b&quot;&#10;                  Block&#10;                    List&#10;                      AssignStmt&#10;                        ID ID=&quot;a&quot;&#10;                        Sub&#10;                          ID ID=&quot;a&quot;&#10;                          ID ID=&quot;b&quot;&#10;                  Opt&#10;                    Block&#10;                      List&#10;                        AssignStmt&#10;                          ID ID=&quot;b&quot;&#10;                          Sub&#10;                            ID ID=&quot;b&quot;&#10;                            ID ID=&quot;a&quot;&#10;          ReturnStmt&#10;            ID ID=&quot;a&quot;&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;gcd2&quot;&#10;      Param&#10;        List&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;a&quot;&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;b&quot;&#10;      Block&#10;        List&#10;          IfStmt&#10;            Equal&#10;              ID ID=&quot;b&quot;&#10;              Literal NUMERAL=&quot;0&quot;&#10;            Block&#10;              List&#10;                ReturnStmt&#10;                  ID ID=&quot;a&quot;&#10;            Opt&#10;          ReturnStmt&#10;            FunCall ID=&quot;gcd2&quot;&#10;              List&#10;                ID ID=&quot;b&quot;&#10;                Mod&#10;                  ID ID=&quot;a&quot;&#10;                  ID ID=&quot;b&quot;&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;main&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;a&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;b&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;a&quot;&#10;            FunCall ID=&quot;read&quot;&#10;              List&#10;          AssignStmt&#10;            ID ID=&quot;b&quot;&#10;            FunCall ID=&quot;read&quot;&#10;              List&#10;          ExprStmt&#10;            FunCall ID=&quot;print&quot;&#10;              List&#10;                FunCall ID=&quot;gcd1&quot;&#10;                  List&#10;                    ID ID=&quot;a&quot;&#10;                    ID ID=&quot;b&quot;&#10;          ExprStmt&#10;            FunCall ID=&quot;print&quot;&#10;              List&#10;                FunCall ID=&quot;gcd2&quot;&#10;                  List&#10;                    ID ID=&quot;a&quot;&#10;                    ID ID=&quot;b&quot;&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;diff&quot;&#10;            Opt&#10;              Sub&#10;                FunCall ID=&quot;gcd1&quot;&#10;                  List&#10;                    ID ID=&quot;a&quot;&#10;                    ID ID=&quot;b&quot;&#10;                FunCall ID=&quot;gcd2&quot;&#10;                  List&#10;                    ID ID=&quot;a&quot;&#10;                    ID ID=&quot;b&quot;&#10;          ExprStmt&#10;            FunCall ID=&quot;print&quot;&#10;              List&#10;                ID ID=&quot;diff&quot;&#10;          ReturnStmt&#10;            Literal NUMERAL=&quot;0&quot;]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;[]&gt; but was:&lt;[Program
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;gcd1&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;b&quot;
      Block
        List
          WhileStmt
            NotEqual
              ID ID=&quot;a&quot;
              ID ID=&quot;b&quot;
            Block
              List
                IfStmt
                  Greater
                    ID ID=&quot;a&quot;
                    ID ID=&quot;b&quot;
                  Block
                    List
                      AssignStmt
                        ID ID=&quot;a&quot;
                        Sub
                          ID ID=&quot;a&quot;
                          ID ID=&quot;b&quot;
                  Opt
                    Block
                      List
                        AssignStmt
                          ID ID=&quot;b&quot;
                          Sub
                            ID ID=&quot;b&quot;
                            ID ID=&quot;a&quot;
          ReturnStmt
            ID ID=&quot;a&quot;
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;gcd2&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;b&quot;
      Block
        List
          IfStmt
            Equal
              ID ID=&quot;b&quot;
              Literal NUMERAL=&quot;0&quot;
            Block
              List
                ReturnStmt
                  ID ID=&quot;a&quot;
            Opt
          ReturnStmt
            FunCall ID=&quot;gcd2&quot;
              List
                ID ID=&quot;b&quot;
                Mod
                  ID ID=&quot;a&quot;
                  ID ID=&quot;b&quot;
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;main&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;b&quot;
            Opt
          AssignStmt
            ID ID=&quot;a&quot;
            FunCall ID=&quot;read&quot;
              List
          AssignStmt
            ID ID=&quot;b&quot;
            FunCall ID=&quot;read&quot;
              List
          ExprStmt
            FunCall ID=&quot;print&quot;
              List
                FunCall ID=&quot;gcd1&quot;
                  List
                    ID ID=&quot;a&quot;
                    ID ID=&quot;b&quot;
          ExprStmt
            FunCall ID=&quot;print&quot;
              List
                FunCall ID=&quot;gcd2&quot;
                  List
                    ID ID=&quot;a&quot;
                    ID ID=&quot;b&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;diff&quot;
            Opt
              Sub
                FunCall ID=&quot;gcd1&quot;
                  List
                    ID ID=&quot;a&quot;
                    ID ID=&quot;b&quot;
                FunCall ID=&quot;gcd2&quot;
                  List
                    ID ID=&quot;a&quot;
                    ID ID=&quot;b&quot;
          ExprStmt
            FunCall ID=&quot;print&quot;
              List
                ID ID=&quot;diff&quot;
          ReturnStmt
            Literal NUMERAL=&quot;0&quot;]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[subtest.in]" classname="lang.TestDumpTree" time="0.007">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;sub&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;            Literal NUMERAL=&quot;2&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;y&quot;&#13;&#10;            Literal NUMERAL=&quot;3&quot;&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Sub&#13;&#10;              ID ID=&quot;y&quot;&#13;&#10;              ID ID=&quot;x&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Sub&#13;&#10;              Literal NUMERAL=&quot;5&quot;&#13;]&#10;              Liter...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;sub&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;x&quot;&#10;            Literal NUMERAL=&quot;2&quot;&#10;          AssignStmt&#10;            ID ID=&quot;y&quot;&#10;            Literal NUMERAL=&quot;3&quot;&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Sub&#10;              ID ID=&quot;y&quot;&#10;              ID ID=&quot;x&quot;&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Sub&#10;              Literal NUMERAL=&quot;5&quot;]&#10;              Liter...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;sub&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Sub
              ID ID=&quot;y&quot;
              ID ID=&quot;x&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Sub
              Literal NUMERAL=&quot;5&quot;]
              Liter...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;sub&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Sub
              ID ID=&quot;y&quot;
              ID ID=&quot;x&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Sub
              Literal NUMERAL=&quot;5&quot;]
              Liter...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[funtest.in]" classname="lang.TestDumpTree" time="0.005"/>
  <testcase name="runTest[addtest.in]" classname="lang.TestDumpTree" time="0.005">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;add&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;            Literal NUMERAL=&quot;3&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;y&quot;&#13;&#10;            Literal NUMERAL=&quot;2&quot;&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Plus&#13;&#10;              ID ID=&quot;x&quot;&#13;&#10;              ID ID=&quot;y&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Plus&#13;&#10;              Literal NUMERAL=&quot;2&quot;&#13;]&#10;              Liter...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;add&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;x&quot;&#10;            Literal NUMERAL=&quot;3&quot;&#10;          AssignStmt&#10;            ID ID=&quot;y&quot;&#10;            Literal NUMERAL=&quot;2&quot;&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Plus&#10;              ID ID=&quot;x&quot;&#10;              ID ID=&quot;y&quot;&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Plus&#10;              Literal NUMERAL=&quot;2&quot;]&#10;              Liter...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;add&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;3&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;2&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Plus
              ID ID=&quot;x&quot;
              ID ID=&quot;y&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Plus
              Literal NUMERAL=&quot;2&quot;]
              Liter...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;add&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;3&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;2&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Plus
              ID ID=&quot;x&quot;
              ID ID=&quot;y&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Plus
              Literal NUMERAL=&quot;2&quot;]
              Liter...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[paramtest.in]" classname="lang.TestDumpTree" time="0.013">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;oneparam&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;          ParamDecl&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;a&quot;&#13;&#10;      Block&#13;&#10;        List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;twoparams&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;          ParamDecl&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;a&quot;&#13;&#10;          ParamDecl&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;b&quot;&#13;&#10;      Block&#13;]&#10;        List&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;oneparam&quot;&#10;      Param&#10;        List&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;a&quot;&#10;      Block&#10;        List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;twoparams&quot;&#10;      Param&#10;        List&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;a&quot;&#10;          ParamDecl&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;b&quot;&#10;      Block]&#10;        List&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;oneparam&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
      Block
        List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;twoparams&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;b&quot;
      Block]
        List&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;oneparam&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
      Block
        List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;twoparams&quot;
      Param
        List
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;a&quot;
          ParamDecl
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;b&quot;
      Block]
        List&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[funcalltest.in]" classname="lang.TestDumpTree" time="0.006">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;[]&gt; but was:&lt;[Program&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;hello&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List]&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;[]&gt; but was:&lt;[Program
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;hello&quot;
      Param
        List
      Block
        List]&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[divtest.in]" classname="lang.TestDumpTree" time="0.009">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;div&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;            Literal NUMERAL=&quot;2&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;y&quot;&#13;&#10;            Literal NUMERAL=&quot;3&quot;&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Div&#13;&#10;              ID ID=&quot;x&quot;&#13;&#10;              ID ID=&quot;y&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Div&#13;&#10;              Literal NUMERAL=&quot;2&quot;&#13;]&#10;              Liter...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;div&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;x&quot;&#10;            Literal NUMERAL=&quot;2&quot;&#10;          AssignStmt&#10;            ID ID=&quot;y&quot;&#10;            Literal NUMERAL=&quot;3&quot;&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Div&#10;              ID ID=&quot;x&quot;&#10;              ID ID=&quot;y&quot;&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Div&#10;              Literal NUMERAL=&quot;2&quot;]&#10;              Liter...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;div&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Div
              ID ID=&quot;x&quot;
              ID ID=&quot;y&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Div
              Literal NUMERAL=&quot;2&quot;]
              Liter...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;div&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Div
              ID ID=&quot;x&quot;
              ID ID=&quot;y&quot;
          AssignStmt
            ID ID=&quot;k&quot;
            Div
              Literal NUMERAL=&quot;2&quot;]
              Liter...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[whiletest.in]" classname="lang.TestDumpTree" time="0.003"/>
  <testcase name="runTest[multest.in]" classname="lang.TestDumpTree" time="0.004">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;mul&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;x&quot;&#13;&#10;            Literal NUMERAL=&quot;2&quot;&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;y&quot;&#13;&#10;            Literal NUMERAL=&quot;3&quot;&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Mul&#13;&#10;              ID ID=&quot;x&quot;&#13;]&#10;              ID ID...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;mul&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;x&quot;&#10;            Literal NUMERAL=&quot;2&quot;&#10;          AssignStmt&#10;            ID ID=&quot;y&quot;&#10;            Literal NUMERAL=&quot;3&quot;&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Mul&#10;              ID ID=&quot;x&quot;]&#10;              ID ID...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;mul&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Mul
              ID ID=&quot;x&quot;]
              ID ID...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;mul&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          AssignStmt
            ID ID=&quot;x&quot;
            Literal NUMERAL=&quot;2&quot;
          AssignStmt
            ID ID=&quot;y&quot;
            Literal NUMERAL=&quot;3&quot;
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Mul
              ID ID=&quot;x&quot;]
              ID ID...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="runTest[addmultest.in]" classname="lang.TestDumpTree" time="0.005">
    <failure message="org.junit.ComparisonFailure: Output differs expected:&lt;Program[&#13;&#10;  List&#13;&#10;    Fun&#13;&#10;      TypeDecl Type=&quot;int&quot;&#13;&#10;      IdDecl Decl=&quot;addmul&quot;&#13;&#10;      Param&#13;&#10;        List&#13;&#10;      Block&#13;&#10;        List&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;x&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;y&quot;&#13;&#10;            Opt&#13;&#10;          DeclStmt&#13;&#10;            TypeDecl Type=&quot;int&quot;&#13;&#10;            IdDecl Decl=&quot;k&quot;&#13;&#10;            Opt&#13;&#10;          AssignStmt&#13;&#10;            ID ID=&quot;k&quot;&#13;&#10;            Plus&#13;&#10;              Mul&#13;&#10;                ID ID=&quot;x&quot;&#13;&#10;                ID ID=&quot;y&quot;&#13;]&#10;              Liter...&gt; but was:&lt;Program[&#10;  List&#10;    Fun&#10;      TypeDecl Type=&quot;int&quot;&#10;      IdDecl Decl=&quot;addmul&quot;&#10;      Param&#10;        List&#10;      Block&#10;        List&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;x&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;y&quot;&#10;            Opt&#10;          DeclStmt&#10;            TypeDecl Type=&quot;int&quot;&#10;            IdDecl Decl=&quot;k&quot;&#10;            Opt&#10;          AssignStmt&#10;            ID ID=&quot;k&quot;&#10;            Plus&#10;              Mul&#10;                ID ID=&quot;x&quot;&#10;                ID ID=&quot;y&quot;]&#10;              Liter...&gt;" type="org.junit.ComparisonFailure">org.junit.ComparisonFailure: Output differs expected:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;addmul&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Plus
              Mul
                ID ID=&quot;x&quot;
                ID ID=&quot;y&quot;]
              Liter...&gt; but was:&lt;Program[
  List
    Fun
      TypeDecl Type=&quot;int&quot;
      IdDecl Decl=&quot;addmul&quot;
      Param
        List
      Block
        List
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;x&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;y&quot;
            Opt
          DeclStmt
            TypeDecl Type=&quot;int&quot;
            IdDecl Decl=&quot;k&quot;
            Opt
          AssignStmt
            ID ID=&quot;k&quot;
            Plus
              Mul
                ID ID=&quot;x&quot;
                ID ID=&quot;y&quot;]
              Liter...&gt;
	at org.junit.Assert.assertEquals(Assert.java:115)
	at lang.Util.compareOutput(Util.java:46)
	at lang.TestDumpTree.runTest(TestDumpTree.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)
	at com.sun.proxy.$Proxy1.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:146)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:128)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
